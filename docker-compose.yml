---
version: '3'
services:
  control-node:
    container_name: control.node
    hostname: control.node
    build:
      context: dockerfile/
      dockerfile: control_node
    image: ansible:controlnode
    working_dir: /playbook
    user: 'root'
    volumes:
      - ./secrets:/secrets
      - ./control_node:/playbook
      - /var/run/docker.sock:/var/run/docker.sock:ro
  node1:
    container_name: node1
    hostname: node1
    tty: true
    image: python:3
    command: sh -c "tail -F /dev/null"
    volumes:
      - ./nodes/node1:/src
      - ./secrets/id_rsa.pub:/root/.ssh/authorized_keys
    ports:
      - "8081:80"
    depends_on:
      - control-node
  node2:
    container_name: node2
    hostname: node2
    tty: true
    image: python:3
    command: sh -c "tail -F /dev/null"
    volumes:
      - ./nodes/node2:/src
      - ./secrets/id_rsa.pub:/root/.ssh/authorized_keys
    ports:
      - "8082:80"
    depends_on:
      - control-node
  node3:
    container_name: node3
    hostname: node3
    tty: true
    image: python:3-alpine
    command: sh -c "tail -F /dev/null"
    volumes:
      - ./nodes/node3:/src
      - ./secrets/id_rsa.pub:/root/.ssh/authorized_keys
    ports:
      - "8083:80"
    depends_on:
      - control-node
  node4:
    container_name: node4
    hostname: node4
    tty: true
    image: python:3-alpine
    command: sh -c "tail -F /dev/null"
    volumes:
      - ./nodes/node4:/src
      - ./secrets/id_rsa.pub:/root/.ssh/authorized_keys
    ports:
      - "8084:80"
    depends_on:
      - control-node
